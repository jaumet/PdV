Call List and scripts to call:
------------------------------

1) The python scripts and the data files are in C:\PdV\

2) The directory structure is:
	C:\PdV\ -> python scripts (See description below)

	C:\PdV\data\ -> 
			map.tsv  -> the last map we are rewriting
			map.default-MadridCDN -> default (BackUp) map. Not used
			allContent.xml  -> (*) Map, you can choose where you want this file

	C:\PdV\data-tmp\
			key.tsv -> the file with the last votes. We rewrite this file for every votation
			allkey.tsv -> all the votations (key.tsv) appended. Usefull for votes analysis


	C:\PdV\data-tmp\log\ -> copies of all map.tsv with questionID and timestamp tag, map-[questionID]-[tiestamp].tsv i.e.: map-12-1327230982.tsv

3) Votation sequence:
	3.0 Read allContents.xml to get the question, time & questionID and represent it
	3.1) Click START votation
	3.2) Click STOP votation (from allContents.xml time)
	3.3) Call python script to EXPORT votes: mdb2stv.py
		(it creates key.tsv)
	3.4) Click to clean the votation
	3.5) Call python script to get the RESULTS in map.tsv: votation_results.py [ID] -> passing the question ID as argument.
	3.6) Read map.tsv from OF and represent it

4) SCRIPT -> python scripts call
	In the allContents.xml, the call is inside <script></script>

	NOTE: from the windows-command-line you can call directly the python scrits as it follows: c:\PdV\[script_name + argv]. F.e.:  c:\PdV\president.py 5 army

	- EXPORT (takes last votes and generates 
				c:\PdV\data-tmp\key.tsv )

		call -> c:\PdV\mdb2tsv.py

	- FIRST VOTATION: after first votation we put action = false (empty seats) in map.tsv for no voting keypads. False ones will not change anymore during the show, unless you wanna map again the active keypads.

		call -> c:\PdV\audience0.py

	- REST of votations, where we put in map.tsv: action = yes/no/abs in the not "false" and not "block" rows.
		call -> votation_results [questionID] "gender"(option)
			(questionID is an integer number)
			(if you pass "gender" as a second argument, the column type (W/M) will be rewriten
		TODO JAUME: get the questionID and add it to log map

	- PRESIDENT: we can choose n presidents. This scripts choose them randombly and adds action = block for each one
		call -> president.py [number]
			(for: president.py manual -> we need to find a way to add manually the chosen presidents!!)	
		TODO JAUME: rewrites the map blocking chosen ones

	- RECOLOCATION1: we pass from X true keypads to X/2. 
		call -> analyzer.py -m simple1 -o C:\PdV\data\map.tsv -c 3

		TODO JAUME: add active = block and rewrite map

	- RECOLOCATION2: we pass from Y keypads to 5 and we group them in 5 groups ( if is possible, otherwise < 5)
		call -> analyzer.py -m results -n 5 -o C:\PdV\data\map.tsv -c 3

		TODO JAUME: add active = block and reqrite map

	- ONE VOTER: 
		call -> 
		
q		TODO JAUME: all

	- BLOCK-CONDITIONS: Block keypads according to old votation results
		call -> 

		TODO JAUME: all
